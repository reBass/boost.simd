##===================================================================================================
##                              Copyright 2016 NumScale SAS
##
##                   Distributed under the Boost Software License, Version 1.0.
##                        See accompanying file LICENSE.txt or copy at
##                            http://www.boost.org/LICENSE_1_0.txt
##===================================================================================================

set ( SOURCES
   abs.cpp
   abs.saturated.cpp
   acos.cpp
   acosd.cpp
   acosh.cpp
   acospi.cpp
   acot.cpp
   acotd.cpp
   acoth.cpp
   acsc.cpp
   acscd.cpp
   acsch.cpp
   all.cpp
   any.cpp
   arg.cpp
   asec.cpp
   asecd.cpp
   asech.cpp
   asin.cpp
   asind.cpp
   asinh.cpp
   asinpi.cpp
   atan2.cpp
   atan2d.cpp
   atan.cpp
   atand.cpp
   atanh.cpp
   atanpi.cpp
   average.cpp
   basic.cpp
   bitfloating.cpp
   bitget.cpp
   bitinteger.cpp
   bitofsign.cpp
   bits.cpp
   bitset.cpp
   bitwise_and.cpp
   bitwise_andnot.cpp
   bitwise_cast.cpp
   bitwise_notand.cpp
   bitwise_notor.cpp
   bitwise_or.cpp
   bitwise_ornot.cpp
   bitwise_not.cpp
   bitwise_select.cpp
   bitwise_xor.cpp
   broadcast.cpp
   cbrt.cpp
   ceil.cpp
   clz.cpp
   compare_equal.cpp
   compare_greater.cpp
   compare_greater_equal.cpp
   compare_less.cpp
   compare_less_equal.cpp
   compare_not_equal.cpp
   complement.cpp
   conj.cpp
   copysign.cpp
   correct_fma.cpp
   cos.cpp
   cosd.cpp
   cosh.cpp
   cospi.cpp
   cot.cpp
   cotd.cpp
   coth.cpp
   cotpi.cpp
   csc.cpp
   cscd.cpp
   csch.cpp
   cscpi.cpp
   ctz.cpp
   cummax.cpp
   cummin.cpp
   cumprod.cpp
   cumsum.cpp
   dec.cpp
   dec.saturated.cpp
   dist.cpp
   dist.saturated.cpp
   divceil.cpp
   div.cpp
   divfix.cpp
   divfloor.cpp
   divides.cpp
   divides.saturated.cpp
   divnearbyint.cpp
   divround.cpp
   divtrunc.cpp
   dot.cpp
   enumerate.cpp
#   eps.cpp
   erfc.cpp
   erf.cpp
   erfcx.cpp
   exp10.cpp
   exp2.cpp
   exp.cpp
   expm1.cpp
   exponentbits.cpp
   exponent.cpp
   exprecnegc.cpp
   exprecneg.cpp
   expx2.cpp
   extract.cpp
   ffs.cpp
   firstbitset.cpp
   firstbitunset.cpp
   floor.cpp
   fma.cpp
   fms.cpp
   fnma.cpp
   fnms.cpp
   fpclassify.cpp
   frac.cpp
   frexp.cpp
   gamma.cpp
   gammaln.cpp
   genmaskc.cpp
   genmask.cpp
   hi.cpp
   hmsb.cpp
   horn1.cpp
   horn.cpp
   horner.cpp
   hypot.cpp
   iceil.cpp
   idivceil.cpp
   idivfix.cpp
   idivfloor.cpp
   idivnearbyint.cpp
   idivround.cpp
   if_allbits_else.cpp
   if_allbits_else_zero.cpp
   if_dec.cpp
   if_else_allbits.cpp
   if_else_nan.cpp
   if_else.cpp
   if_else_zero.cpp
   if_inc.cpp
   ifix.cpp
   ifloor.cpp
   if_minus.cpp
   ifnot_dec.cpp
   ifnot_inc.cpp
   ifnot_minus.cpp
   ifnot_plus.cpp
   if_nan_else.cpp
   if_one_else_zero.cpp
   if_plus.cpp
   if_zero_else.cpp
   if_zero_else_allbits.cpp
   if_zero_else_one.cpp
   ilog2.cpp
   ilogb.cpp
   inc.cpp
   inc.saturated.cpp
   indeg.cpp
   inearbyint.cpp
   inrad.cpp
   insert.cpp
   iround.cpp
   is_denormal.cpp
   is_equal.cpp
   is_equal_with_equal_nans.cpp
   is_eqz.cpp
   is_even.cpp
   is_finite.cpp
   is_flint.cpp
   is_gez.cpp
   is_greater.cpp
   is_greater_equal.cpp
   is_gtz.cpp
   is_imag.cpp
   is_included_c.cpp
   is_included.cpp
   is_inf.cpp
   is_invalid.cpp
   is_less.cpp
   is_less_equal.cpp
   is_lessgreater.cpp
   is_lez.cpp
   is_ltz.cpp
   is_nan.cpp
   is_negative.cpp
   is_nez.cpp
   is_ngez.cpp
   is_ngtz.cpp
   is_nlez.cpp
   is_nltz.cpp
   is_normal.cpp
   is_not_denormal.cpp
   is_not_equal.cpp
   is_not_equal_with_equal_nans.cpp
   is_not_greater.cpp
   is_not_greater_equal.cpp
   is_not_imag.cpp
   is_not_infinite.cpp
   is_not_less.cpp
   is_not_less_equal.cpp
   is_not_nan.cpp
   is_not_real.cpp
   is_odd.cpp
   is_ord.cpp
   is_positive.cpp
   is_real.cpp
   is_simd_logical.cpp
   is_unord.cpp
   ldexp.cpp
   load.cpp
   lo.cpp
   log10.cpp
   log1p.cpp
   log2.cpp
   log.cpp
   logical_and.cpp
   logical_andnot.cpp
   logical_notand.cpp
   logical_not.cpp
   logical_notor.cpp
   logical_or.cpp
   logical_ornot.cpp
   logical_xor.cpp
   lookup.cpp
   majority.cpp
   make.cpp
   mantissa.cpp
   mask2logical.cpp
   max.cpp
   maximum.cpp
   maxmag.cpp
   maxnum.cpp
   maxnummag.cpp
   meanof.cpp
   min.cpp
   minimum.cpp
   minmag.cpp
   minmod.cpp
   minnum.cpp
   minnummag.cpp
   minus.cpp
   modf.cpp
   multiplies.cpp
   multiplies.saturated.cpp
   nbtrue.cpp
   nearbyint.cpp
   negate.cpp
   negatenz.cpp
   negif.cpp
   negifnot.cpp
   nextafter.cpp
   next.cpp
   nextpow2.cpp
   none.cpp
   nthroot.cpp
   oneminus.cpp
   oneminus.saturated.cpp
   plus.cpp
   plus.saturated.cpp
   popcnt.cpp
   pow2.cpp
   pow_abs.cpp
   pow.cpp
   predecessor.cpp
   prev.cpp
   prod.cpp
   rec.cpp
   rem_2pi.cpp
   remceil.cpp
   rem.cpp
   remfloor.cpp
   remnearbyint.cpp
   rem_pio2_cephes.cpp
   rem_pio2.cpp
   rem_pio2_medium.cpp
   rem_pio2_straight.cpp
   remquo.cpp
   remround.cpp
   reversebits.cpp
   reverse.cpp
   rol.cpp
   ror.cpp
   round.cpp
   rrol.cpp
   rror.cpp
   rshl.cpp
   rshr.cpp
   rsqrt.cpp
   safe_max.cpp
   safe_min.cpp
   saturate.cpp
   sbits.cpp
   sec.cpp
   secd.cpp
   sech.cpp
   secpi.cpp
   shift_left.cpp
   shift_right.cpp
   shr.cpp
   shuffle.cpp
   signbit.cpp
   sign.cpp
   signgam.cpp
   significants.cpp
   signnz.cpp
   sinc.cpp
   sincos.cpp
   sincosd.cpp
   sincospi.cpp
   sincpi.cpp
   sin.cpp
   sind.cpp
   sinhc.cpp
   sinhcosh.cpp
   sinh.cpp
   sinpi.cpp
   slide.cpp
   sort.cpp
   splat.cpp
   splatted_maximum.cpp
   splatted_minimum.cpp
   sqr_abs.cpp
   sqr.cpp
   sqr.saturated.cpp
   sqrt1pm1.cpp
   sqrt.cpp
   stirling.cpp
   store.cpp
   stream.cpp
   successor.cpp
   swapbytes.cpp
   sum.cpp
   tan.cpp
   tand.cpp
   tanh.cpp
   tanpi.cpp
   tenpower.cpp
   tofloat.cpp
   toint.cpp
   toint.saturated.cpp
   touint.cpp
   touint.saturated.cpp
   trunc.cpp
   two_add.cpp
   twopower.cpp
   two_prod.cpp
   two_split.cpp
   ulp.cpp
   ulpdist.cpp
   unary_minus.cpp
   unary_minus.saturated.cpp
   unary_plus.cpp
)

make_unit( "function.scalar"   ${SOURCES})
make_coverage("function.scalar"  ${SOURCES})
